/*
    题目描述
明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了N个1到1000之间的随机整数（N≤1000），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作(同一个测试用例里可能会有多组数据，希望大家能正确处理)。



Input Param

n               输入随机数的个数

inputArray      n个随机整数组成的数组


Return Value

OutputArray    输出处理后的随机整数



注：测试用例保证输入参数的正确性，答题者无需验证。测试用例不止一组。



输入描述:
输入多行，先输入随机整数的个数，再输入相应个数的整数

输出描述:
返回多行，处理后的结果

示例1
输入
复制
11
10
20
40
32
67
40
20
89
300
400
15
输出
复制
10
15
20
32
40
67
89
300
400

*/

/*****************************************************************/
// 包含必须的头文件

#include <iostream>
#include <vector>
#include <queue>
#include <limits.h>
#include <bits/stdc++.h>
using namespace std;

// 定义本地
#define LOCAL_ 1

typedef vector<int>             Vint;
typedef vector<string>          Vstr;
typedef vector<vector<int>>     VVint;


// 常用输出函数 
// 一维 数组输出
template <typename T>
std::string CoutVec(const T& vec,int flg =0)
{
    std::string str="";
    for(int i=0;i<vec.size();i++)
    {
        str += to_string(vec[i])  +", ";
    }

    // 默认不输出 换行
    if(flg)
        str += "\n";
    // cout<<str;
    
    return str;
}

// 二维数组输出
template <typename T>
std::string CoutVec2(const T& vec,int flg =1)
{
    std::string str="";
    for(int i=0;i<vec.size();i++)
    {
        str += CoutVec(vec[i],flg);
    }
    return str;
}


/*****************************************************************/


int main(void)
{
    int n = 0;

    #if LOCAL_
        n = 288;
        vector<int> input = { 23, 29, 40, 111, 41, 104, 21, 94, 108, 118, 21, 110, 34, 24, 24, 40, 66, 19, 25, 40, 30, 5, 59, 116, 98, 110, 118, 77, 87, 49, 95, 53, 44, 94, 52, 104, 7, 118, 20, 5, 57, 81, 73, 39, 106, 6, 26, 2, 69, 44, 19, 50, 78, 61, 55, 27, 97, 103, 109, 66, 101, 15, 86, 17, 70, 96, 50, 1, 118, 81, 107, 102, 22, 84, 112, 64, 106, 14, 15, 14, 93, 54, 38, 66, 78, 5, 118, 60, 107, 84, 34, 47, 57, 8, 5, 67, 111, 42, 35, 64, 10, 109, 90, 57, 72, 73, 91, 54, 5, 10, 31, 64, 113, 39, 120, 6, 45, 15, 46, 112, 40, 105, 115, 106, 88, 64, 20, 113, 52, 1, 40, 90, 103, 63, 28, 11, 34, 33, 11, 78, 42, 30, 119, 34, 94, 78, 73, 104, 36, 44, 65, 41, 81, 69, 74, 75, 49, 66, 30, 74, 75, 111, 44, 97, 102, 65, 99, 63, 77, 78, 102, 84, 10, 6, 12, 27, 99, 120, 84, 37, 10, 74, 2, 83, 53, 18, 106, 48, 17, 26, 94, 50, 11, 120, 17, 21, 79, 42, 48, 48, 75, 91, 56, 69, 21, 44, 16, 14, 34, 110, 43, 27, 102, 63, 81, 92, 109, 97, 100, 70, 23, 44, 17, 32, 60, 40, 40, 36, 3, 92, 48, 34, 88, 58, 30, 106, 63, 31, 8, 116, 90, 100, 83, 111, 42, 112, 6, 8, 115, 109, 83, 7, 26, 88, 68, 86, 116, 39, 55, 76, 109, 45, 1, 39, 4, 52, 78, 26, 33, 96, 14, 38, 105, 65, 116, 4, 48, 83, 24, 113, 111, 70, 37, 34, 51, 46, 18, 104};
    #else
        cin>>n;
    #endif

    /* 
    vector<int> input(n,0);
    for(int k=0;k<n;k++)
    {
        cin>>input[k];
    }
    */


    while(cin>>n)
    {
    
        set<int> dataSet;

        for(int i=0;i<n;i++)
        {
            int tmp =0;
            #if LOCAL_
                tmp = input[i];
            #else
                cin>>tmp;
            #endif

            #if LOCAL_
                cout<<tmp<<"->";
            #endif 

            dataSet.insert(tmp);
        }

        
        #if LOCAL_
            cout<<endl;
        #endif 

        // 输入数据之后 使用set 去重 

        for(auto it:dataSet)
        {
            cout<<it<<endl;
        }
    }


    return 0;
}



































